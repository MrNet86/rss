/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vnpt.portal.rss.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.vnpt.portal.rss.model.RssCategory;
import com.vnpt.portal.rss.model.RssCategoryModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RssCategory service. Represents a row in the &quot;eportal_rss_category&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.vnpt.portal.rss.model.RssCategoryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RssCategoryImpl}.
 * </p>
 *
 * @author MrNet
 * @see RssCategoryImpl
 * @see com.vnpt.portal.rss.model.RssCategory
 * @see com.vnpt.portal.rss.model.RssCategoryModel
 * @generated
 */
public class RssCategoryModelImpl extends BaseModelImpl<RssCategory>
	implements RssCategoryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a rss category model instance should use the {@link com.vnpt.portal.rss.model.RssCategory} interface instead.
	 */
	public static final String TABLE_NAME = "eportal_rss_category";
	public static final Object[][] TABLE_COLUMNS = {
			{ "rssCategoryId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "status", Types.INTEGER },
			{ "createdId", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table eportal_rss_category (rssCategoryId LONG not null primary key,groupId LONG,companyId LONG,name VARCHAR(75) null,description VARCHAR(75) null,status INTEGER,createdId LONG,createdDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table eportal_rss_category";
	public static final String ORDER_BY_JPQL = " ORDER BY rssCategory.rssCategoryId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eportal_rss_category.rssCategoryId ASC";
	public static final String DATA_SOURCE = "eGovDataSource";
	public static final String SESSION_FACTORY = "eGovSessionFactory";
	public static final String TX_MANAGER = "eGovTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.vnpt.portal.rss.model.RssCategory"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.vnpt.portal.rss.model.RssCategory"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.vnpt.portal.rss.model.RssCategory"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long RSSCATEGORYID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.vnpt.portal.rss.model.RssCategory"));

	public RssCategoryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _rssCategoryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setRssCategoryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _rssCategoryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RssCategory.class;
	}

	@Override
	public String getModelClassName() {
		return RssCategory.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("rssCategoryId", getRssCategoryId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("status", getStatus());
		attributes.put("createdId", getCreatedId());
		attributes.put("createdDate", getCreatedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long rssCategoryId = (Long)attributes.get("rssCategoryId");

		if (rssCategoryId != null) {
			setRssCategoryId(rssCategoryId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long createdId = (Long)attributes.get("createdId");

		if (createdId != null) {
			setCreatedId(createdId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}
	}

	@Override
	public long getRssCategoryId() {
		return _rssCategoryId;
	}

	@Override
	public void setRssCategoryId(long rssCategoryId) {
		_rssCategoryId = rssCategoryId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@Override
	public long getCreatedId() {
		return _createdId;
	}

	@Override
	public void setCreatedId(long createdId) {
		_createdId = createdId;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			RssCategory.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RssCategory toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RssCategory)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RssCategoryImpl rssCategoryImpl = new RssCategoryImpl();

		rssCategoryImpl.setRssCategoryId(getRssCategoryId());
		rssCategoryImpl.setGroupId(getGroupId());
		rssCategoryImpl.setCompanyId(getCompanyId());
		rssCategoryImpl.setName(getName());
		rssCategoryImpl.setDescription(getDescription());
		rssCategoryImpl.setStatus(getStatus());
		rssCategoryImpl.setCreatedId(getCreatedId());
		rssCategoryImpl.setCreatedDate(getCreatedDate());

		rssCategoryImpl.resetOriginalValues();

		return rssCategoryImpl;
	}

	@Override
	public int compareTo(RssCategory rssCategory) {
		long primaryKey = rssCategory.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RssCategory)) {
			return false;
		}

		RssCategory rssCategory = (RssCategory)obj;

		long primaryKey = rssCategory.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		RssCategoryModelImpl rssCategoryModelImpl = this;

		rssCategoryModelImpl._originalGroupId = rssCategoryModelImpl._groupId;

		rssCategoryModelImpl._setOriginalGroupId = false;

		rssCategoryModelImpl._originalCompanyId = rssCategoryModelImpl._companyId;

		rssCategoryModelImpl._setOriginalCompanyId = false;

		rssCategoryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RssCategory> toCacheModel() {
		RssCategoryCacheModel rssCategoryCacheModel = new RssCategoryCacheModel();

		rssCategoryCacheModel.rssCategoryId = getRssCategoryId();

		rssCategoryCacheModel.groupId = getGroupId();

		rssCategoryCacheModel.companyId = getCompanyId();

		rssCategoryCacheModel.name = getName();

		String name = rssCategoryCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			rssCategoryCacheModel.name = null;
		}

		rssCategoryCacheModel.description = getDescription();

		String description = rssCategoryCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			rssCategoryCacheModel.description = null;
		}

		rssCategoryCacheModel.status = getStatus();

		rssCategoryCacheModel.createdId = getCreatedId();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			rssCategoryCacheModel.createdDate = createdDate.getTime();
		}
		else {
			rssCategoryCacheModel.createdDate = Long.MIN_VALUE;
		}

		return rssCategoryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{rssCategoryId=");
		sb.append(getRssCategoryId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", createdId=");
		sb.append(getCreatedId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.vnpt.portal.rss.model.RssCategory");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>rssCategoryId</column-name><column-value><![CDATA[");
		sb.append(getRssCategoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdId</column-name><column-value><![CDATA[");
		sb.append(getCreatedId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = RssCategory.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			RssCategory.class
		};
	private long _rssCategoryId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private String _name;
	private String _description;
	private int _status;
	private long _createdId;
	private Date _createdDate;
	private long _columnBitmask;
	private RssCategory _escapedModel;
}