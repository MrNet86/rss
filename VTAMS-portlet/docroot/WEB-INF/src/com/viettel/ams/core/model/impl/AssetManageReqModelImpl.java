/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.viettel.ams.core.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.viettel.ams.core.model.AssetManageReq;
import com.viettel.ams.core.model.AssetManageReqModel;
import com.viettel.ams.core.model.AssetManageReqSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the AssetManageReq service. Represents a row in the &quot;Asset_Manage_Req&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.viettel.ams.core.model.AssetManageReqModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AssetManageReqImpl}.
 * </p>
 *
 * @author MrNet
 * @see AssetManageReqImpl
 * @see com.viettel.ams.core.model.AssetManageReq
 * @see com.viettel.ams.core.model.AssetManageReqModel
 * @generated
 */
@JSON(strict = true)
public class AssetManageReqModelImpl extends BaseModelImpl<AssetManageReq>
	implements AssetManageReqModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a asset manage req model instance should use the {@link com.viettel.ams.core.model.AssetManageReq} interface instead.
	 */
	public static final String TABLE_NAME = "Asset_Manage_Req";
	public static final Object[][] TABLE_COLUMNS = {
			{ "manage_req_id", Types.BIGINT },
			{ "req_group_id", Types.BIGINT },
			{ "user_id", Types.BIGINT },
			{ "recv_group_id", Types.BIGINT },
			{ "cause", Types.VARCHAR },
			{ "creator_id", Types.BIGINT },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "STATUS", Types.BIGINT },
			{ "TYPE", Types.BIGINT },
			{ "USED_GROUP_ID", Types.BIGINT },
			{ "CODE", Types.VARCHAR },
			{ "ACCEPTOR_ID", Types.BIGINT },
			{ "ACCEPT_COMMENT", Types.VARCHAR },
			{ "RETRIEVE_CAUSE_ID", Types.BIGINT },
			{ "CONSTRUCT_ID", Types.BIGINT },
			{ "DELEGATOR", Types.VARCHAR },
			{ "IS_FULL", Types.BIGINT },
			{ "TITLE_DELEGATOR", Types.VARCHAR },
			{ "MOBILE_NUMBER", Types.BIGINT },
			{ "DOCUMENT", Types.VARCHAR },
			{ "FAIL_CHECK_ID", Types.BIGINT },
			{ "DELIVERY_NOTE_ID", Types.BIGINT },
			{ "IS_MAINTAIN", Types.BIGINT },
			{ "CAUSE_REJECT", Types.VARCHAR },
			{ "ASSET_TYPE", Types.BIGINT },
			{ "RETRIEVE_TYPE", Types.BIGINT },
			{ "RETRIEVE_CMD_ID", Types.BIGINT },
			{ "PLAN_SWAP_ID", Types.BIGINT },
			{ "CERTIFICATE_REGISTRATION_ID", Types.BIGINT },
			{ "CONTRACT_ID", Types.BIGINT },
			{ "PARTNER_ID", Types.BIGINT },
			{ "STATUS_CA", Types.BIGINT },
			{ "COMMENT_CA", Types.VARCHAR },
			{ "DOCUMENT_CA_ID", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table Asset_Manage_Req (manage_req_id LONG not null primary key,req_group_id LONG,user_id LONG,recv_group_id LONG,cause VARCHAR(75) null,creator_id LONG,CREATED_DATE DATE null,STATUS LONG,TYPE LONG,USED_GROUP_ID LONG,CODE VARCHAR(75) null,ACCEPTOR_ID LONG,ACCEPT_COMMENT VARCHAR(75) null,RETRIEVE_CAUSE_ID LONG,CONSTRUCT_ID LONG,DELEGATOR VARCHAR(75) null,IS_FULL LONG,TITLE_DELEGATOR VARCHAR(75) null,MOBILE_NUMBER LONG,DOCUMENT VARCHAR(75) null,FAIL_CHECK_ID LONG,DELIVERY_NOTE_ID LONG,IS_MAINTAIN LONG,CAUSE_REJECT VARCHAR(75) null,ASSET_TYPE LONG,RETRIEVE_TYPE LONG,RETRIEVE_CMD_ID LONG,PLAN_SWAP_ID LONG,CERTIFICATE_REGISTRATION_ID LONG,CONTRACT_ID LONG,PARTNER_ID LONG,STATUS_CA LONG,COMMENT_CA VARCHAR(75) null,DOCUMENT_CA_ID LONG)";
	public static final String TABLE_SQL_DROP = "drop table Asset_Manage_Req";
	public static final String ORDER_BY_JPQL = " ORDER BY assetManageReq.manageReqId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Asset_Manage_Req.manage_req_id ASC";
	public static final String DATA_SOURCE = "amsDataSource";
	public static final String SESSION_FACTORY = "amsSessionFactory";
	public static final String TX_MANAGER = "amsTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.viettel.ams.core.model.AssetManageReq"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.viettel.ams.core.model.AssetManageReq"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AssetManageReq toModel(AssetManageReqSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		AssetManageReq model = new AssetManageReqImpl();

		model.setManageReqId(soapModel.getManageReqId());
		model.setReqGroupId(soapModel.getReqGroupId());
		model.setUserId(soapModel.getUserId());
		model.setRecvGroupId(soapModel.getRecvGroupId());
		model.setCause(soapModel.getCause());
		model.setCreatorId(soapModel.getCreatorId());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setStatus(soapModel.getStatus());
		model.setType(soapModel.getType());
		model.setUsedGroupId(soapModel.getUsedGroupId());
		model.setCode(soapModel.getCode());
		model.setAcceptorId(soapModel.getAcceptorId());
		model.setAcceptComment(soapModel.getAcceptComment());
		model.setRetrieveCauseId(soapModel.getRetrieveCauseId());
		model.setConstructId(soapModel.getConstructId());
		model.setDelegator(soapModel.getDelegator());
		model.setIsFull(soapModel.getIsFull());
		model.setTitleDelegator(soapModel.getTitleDelegator());
		model.setMobileNumber(soapModel.getMobileNumber());
		model.setDocument(soapModel.getDocument());
		model.setFailCheckId(soapModel.getFailCheckId());
		model.setDeliveryNoteId(soapModel.getDeliveryNoteId());
		model.setIsMaintain(soapModel.getIsMaintain());
		model.setCauseReject(soapModel.getCauseReject());
		model.setAssetType(soapModel.getAssetType());
		model.setRetrieveType(soapModel.getRetrieveType());
		model.setRetrieveCmdId(soapModel.getRetrieveCmdId());
		model.setPlanSwapId(soapModel.getPlanSwapId());
		model.setCertificateRegistrationId(soapModel.getCertificateRegistrationId());
		model.setContractid(soapModel.getContractid());
		model.setPartnerId(soapModel.getPartnerId());
		model.setStatusCa(soapModel.getStatusCa());
		model.setCommentCa(soapModel.getCommentCa());
		model.setDocumentCaId(soapModel.getDocumentCaId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AssetManageReq> toModels(AssetManageReqSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<AssetManageReq> models = new ArrayList<AssetManageReq>(soapModels.length);

		for (AssetManageReqSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.viettel.ams.core.model.AssetManageReq"));

	public AssetManageReqModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _manageReqId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setManageReqId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _manageReqId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AssetManageReq.class;
	}

	@Override
	public String getModelClassName() {
		return AssetManageReq.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("manageReqId", getManageReqId());
		attributes.put("reqGroupId", getReqGroupId());
		attributes.put("userId", getUserId());
		attributes.put("recvGroupId", getRecvGroupId());
		attributes.put("cause", getCause());
		attributes.put("creatorId", getCreatorId());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("status", getStatus());
		attributes.put("type", getType());
		attributes.put("usedGroupId", getUsedGroupId());
		attributes.put("code", getCode());
		attributes.put("acceptorId", getAcceptorId());
		attributes.put("acceptComment", getAcceptComment());
		attributes.put("retrieveCauseId", getRetrieveCauseId());
		attributes.put("constructId", getConstructId());
		attributes.put("delegator", getDelegator());
		attributes.put("isFull", getIsFull());
		attributes.put("titleDelegator", getTitleDelegator());
		attributes.put("mobileNumber", getMobileNumber());
		attributes.put("document", getDocument());
		attributes.put("failCheckId", getFailCheckId());
		attributes.put("deliveryNoteId", getDeliveryNoteId());
		attributes.put("isMaintain", getIsMaintain());
		attributes.put("causeReject", getCauseReject());
		attributes.put("assetType", getAssetType());
		attributes.put("retrieveType", getRetrieveType());
		attributes.put("retrieveCmdId", getRetrieveCmdId());
		attributes.put("planSwapId", getPlanSwapId());
		attributes.put("certificateRegistrationId",
			getCertificateRegistrationId());
		attributes.put("contractid", getContractid());
		attributes.put("partnerId", getPartnerId());
		attributes.put("statusCa", getStatusCa());
		attributes.put("commentCa", getCommentCa());
		attributes.put("documentCaId", getDocumentCaId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long manageReqId = (Long)attributes.get("manageReqId");

		if (manageReqId != null) {
			setManageReqId(manageReqId);
		}

		Long reqGroupId = (Long)attributes.get("reqGroupId");

		if (reqGroupId != null) {
			setReqGroupId(reqGroupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long recvGroupId = (Long)attributes.get("recvGroupId");

		if (recvGroupId != null) {
			setRecvGroupId(recvGroupId);
		}

		String cause = (String)attributes.get("cause");

		if (cause != null) {
			setCause(cause);
		}

		Long creatorId = (Long)attributes.get("creatorId");

		if (creatorId != null) {
			setCreatorId(creatorId);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Long status = (Long)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long type = (Long)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		Long usedGroupId = (Long)attributes.get("usedGroupId");

		if (usedGroupId != null) {
			setUsedGroupId(usedGroupId);
		}

		String code = (String)attributes.get("code");

		if (code != null) {
			setCode(code);
		}

		Long acceptorId = (Long)attributes.get("acceptorId");

		if (acceptorId != null) {
			setAcceptorId(acceptorId);
		}

		String acceptComment = (String)attributes.get("acceptComment");

		if (acceptComment != null) {
			setAcceptComment(acceptComment);
		}

		Long retrieveCauseId = (Long)attributes.get("retrieveCauseId");

		if (retrieveCauseId != null) {
			setRetrieveCauseId(retrieveCauseId);
		}

		Long constructId = (Long)attributes.get("constructId");

		if (constructId != null) {
			setConstructId(constructId);
		}

		String delegator = (String)attributes.get("delegator");

		if (delegator != null) {
			setDelegator(delegator);
		}

		Long isFull = (Long)attributes.get("isFull");

		if (isFull != null) {
			setIsFull(isFull);
		}

		String titleDelegator = (String)attributes.get("titleDelegator");

		if (titleDelegator != null) {
			setTitleDelegator(titleDelegator);
		}

		Long mobileNumber = (Long)attributes.get("mobileNumber");

		if (mobileNumber != null) {
			setMobileNumber(mobileNumber);
		}

		String document = (String)attributes.get("document");

		if (document != null) {
			setDocument(document);
		}

		Long failCheckId = (Long)attributes.get("failCheckId");

		if (failCheckId != null) {
			setFailCheckId(failCheckId);
		}

		Long deliveryNoteId = (Long)attributes.get("deliveryNoteId");

		if (deliveryNoteId != null) {
			setDeliveryNoteId(deliveryNoteId);
		}

		Long isMaintain = (Long)attributes.get("isMaintain");

		if (isMaintain != null) {
			setIsMaintain(isMaintain);
		}

		String causeReject = (String)attributes.get("causeReject");

		if (causeReject != null) {
			setCauseReject(causeReject);
		}

		Long assetType = (Long)attributes.get("assetType");

		if (assetType != null) {
			setAssetType(assetType);
		}

		Long retrieveType = (Long)attributes.get("retrieveType");

		if (retrieveType != null) {
			setRetrieveType(retrieveType);
		}

		Long retrieveCmdId = (Long)attributes.get("retrieveCmdId");

		if (retrieveCmdId != null) {
			setRetrieveCmdId(retrieveCmdId);
		}

		Long planSwapId = (Long)attributes.get("planSwapId");

		if (planSwapId != null) {
			setPlanSwapId(planSwapId);
		}

		Long certificateRegistrationId = (Long)attributes.get(
				"certificateRegistrationId");

		if (certificateRegistrationId != null) {
			setCertificateRegistrationId(certificateRegistrationId);
		}

		Long contractid = (Long)attributes.get("contractid");

		if (contractid != null) {
			setContractid(contractid);
		}

		Long partnerId = (Long)attributes.get("partnerId");

		if (partnerId != null) {
			setPartnerId(partnerId);
		}

		Long statusCa = (Long)attributes.get("statusCa");

		if (statusCa != null) {
			setStatusCa(statusCa);
		}

		String commentCa = (String)attributes.get("commentCa");

		if (commentCa != null) {
			setCommentCa(commentCa);
		}

		Long documentCaId = (Long)attributes.get("documentCaId");

		if (documentCaId != null) {
			setDocumentCaId(documentCaId);
		}
	}

	@JSON
	@Override
	public long getManageReqId() {
		return _manageReqId;
	}

	@Override
	public void setManageReqId(long manageReqId) {
		_manageReqId = manageReqId;
	}

	@JSON
	@Override
	public Long getReqGroupId() {
		return _reqGroupId;
	}

	@Override
	public void setReqGroupId(Long reqGroupId) {
		_reqGroupId = reqGroupId;
	}

	@JSON
	@Override
	public Long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(Long userId) {
		_userId = userId;
	}

	@JSON
	@Override
	public Long getRecvGroupId() {
		return _recvGroupId;
	}

	@Override
	public void setRecvGroupId(Long recvGroupId) {
		_recvGroupId = recvGroupId;
	}

	@JSON
	@Override
	public String getCause() {
		if (_cause == null) {
			return StringPool.BLANK;
		}
		else {
			return _cause;
		}
	}

	@Override
	public void setCause(String cause) {
		_cause = cause;
	}

	@JSON
	@Override
	public Long getCreatorId() {
		return _creatorId;
	}

	@Override
	public void setCreatorId(Long creatorId) {
		_creatorId = creatorId;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@JSON
	@Override
	public Long getStatus() {
		return _status;
	}

	@Override
	public void setStatus(Long status) {
		_status = status;
	}

	@JSON
	@Override
	public Long getType() {
		return _type;
	}

	@Override
	public void setType(Long type) {
		_type = type;
	}

	@JSON
	@Override
	public Long getUsedGroupId() {
		return _usedGroupId;
	}

	@Override
	public void setUsedGroupId(Long usedGroupId) {
		_usedGroupId = usedGroupId;
	}

	@JSON
	@Override
	public String getCode() {
		if (_code == null) {
			return StringPool.BLANK;
		}
		else {
			return _code;
		}
	}

	@Override
	public void setCode(String code) {
		_code = code;
	}

	@JSON
	@Override
	public Long getAcceptorId() {
		return _acceptorId;
	}

	@Override
	public void setAcceptorId(Long acceptorId) {
		_acceptorId = acceptorId;
	}

	@JSON
	@Override
	public String getAcceptComment() {
		if (_acceptComment == null) {
			return StringPool.BLANK;
		}
		else {
			return _acceptComment;
		}
	}

	@Override
	public void setAcceptComment(String acceptComment) {
		_acceptComment = acceptComment;
	}

	@JSON
	@Override
	public Long getRetrieveCauseId() {
		return _retrieveCauseId;
	}

	@Override
	public void setRetrieveCauseId(Long retrieveCauseId) {
		_retrieveCauseId = retrieveCauseId;
	}

	@JSON
	@Override
	public Long getConstructId() {
		return _constructId;
	}

	@Override
	public void setConstructId(Long constructId) {
		_constructId = constructId;
	}

	@JSON
	@Override
	public String getDelegator() {
		if (_delegator == null) {
			return StringPool.BLANK;
		}
		else {
			return _delegator;
		}
	}

	@Override
	public void setDelegator(String delegator) {
		_delegator = delegator;
	}

	@JSON
	@Override
	public Long getIsFull() {
		return _isFull;
	}

	@Override
	public void setIsFull(Long isFull) {
		_isFull = isFull;
	}

	@JSON
	@Override
	public String getTitleDelegator() {
		if (_titleDelegator == null) {
			return StringPool.BLANK;
		}
		else {
			return _titleDelegator;
		}
	}

	@Override
	public void setTitleDelegator(String titleDelegator) {
		_titleDelegator = titleDelegator;
	}

	@JSON
	@Override
	public Long getMobileNumber() {
		return _mobileNumber;
	}

	@Override
	public void setMobileNumber(Long mobileNumber) {
		_mobileNumber = mobileNumber;
	}

	@JSON
	@Override
	public String getDocument() {
		if (_document == null) {
			return StringPool.BLANK;
		}
		else {
			return _document;
		}
	}

	@Override
	public void setDocument(String document) {
		_document = document;
	}

	@JSON
	@Override
	public Long getFailCheckId() {
		return _failCheckId;
	}

	@Override
	public void setFailCheckId(Long failCheckId) {
		_failCheckId = failCheckId;
	}

	@JSON
	@Override
	public Long getDeliveryNoteId() {
		return _deliveryNoteId;
	}

	@Override
	public void setDeliveryNoteId(Long deliveryNoteId) {
		_deliveryNoteId = deliveryNoteId;
	}

	@JSON
	@Override
	public Long getIsMaintain() {
		return _isMaintain;
	}

	@Override
	public void setIsMaintain(Long isMaintain) {
		_isMaintain = isMaintain;
	}

	@JSON
	@Override
	public String getCauseReject() {
		if (_causeReject == null) {
			return StringPool.BLANK;
		}
		else {
			return _causeReject;
		}
	}

	@Override
	public void setCauseReject(String causeReject) {
		_causeReject = causeReject;
	}

	@JSON
	@Override
	public Long getAssetType() {
		return _assetType;
	}

	@Override
	public void setAssetType(Long assetType) {
		_assetType = assetType;
	}

	@JSON
	@Override
	public Long getRetrieveType() {
		return _retrieveType;
	}

	@Override
	public void setRetrieveType(Long retrieveType) {
		_retrieveType = retrieveType;
	}

	@JSON
	@Override
	public Long getRetrieveCmdId() {
		return _retrieveCmdId;
	}

	@Override
	public void setRetrieveCmdId(Long retrieveCmdId) {
		_retrieveCmdId = retrieveCmdId;
	}

	@JSON
	@Override
	public Long getPlanSwapId() {
		return _planSwapId;
	}

	@Override
	public void setPlanSwapId(Long planSwapId) {
		_planSwapId = planSwapId;
	}

	@JSON
	@Override
	public Long getCertificateRegistrationId() {
		return _certificateRegistrationId;
	}

	@Override
	public void setCertificateRegistrationId(Long certificateRegistrationId) {
		_certificateRegistrationId = certificateRegistrationId;
	}

	@JSON
	@Override
	public Long getContractid() {
		return _contractid;
	}

	@Override
	public void setContractid(Long contractid) {
		_contractid = contractid;
	}

	@JSON
	@Override
	public Long getPartnerId() {
		return _partnerId;
	}

	@Override
	public void setPartnerId(Long partnerId) {
		_partnerId = partnerId;
	}

	@JSON
	@Override
	public Long getStatusCa() {
		return _statusCa;
	}

	@Override
	public void setStatusCa(Long statusCa) {
		_statusCa = statusCa;
	}

	@JSON
	@Override
	public String getCommentCa() {
		if (_commentCa == null) {
			return StringPool.BLANK;
		}
		else {
			return _commentCa;
		}
	}

	@Override
	public void setCommentCa(String commentCa) {
		_commentCa = commentCa;
	}

	@JSON
	@Override
	public Long getDocumentCaId() {
		return _documentCaId;
	}

	@Override
	public void setDocumentCaId(Long documentCaId) {
		_documentCaId = documentCaId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			AssetManageReq.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AssetManageReq toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AssetManageReq)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AssetManageReqImpl assetManageReqImpl = new AssetManageReqImpl();

		assetManageReqImpl.setManageReqId(getManageReqId());
		assetManageReqImpl.setReqGroupId(getReqGroupId());
		assetManageReqImpl.setUserId(getUserId());
		assetManageReqImpl.setRecvGroupId(getRecvGroupId());
		assetManageReqImpl.setCause(getCause());
		assetManageReqImpl.setCreatorId(getCreatorId());
		assetManageReqImpl.setCreatedDate(getCreatedDate());
		assetManageReqImpl.setStatus(getStatus());
		assetManageReqImpl.setType(getType());
		assetManageReqImpl.setUsedGroupId(getUsedGroupId());
		assetManageReqImpl.setCode(getCode());
		assetManageReqImpl.setAcceptorId(getAcceptorId());
		assetManageReqImpl.setAcceptComment(getAcceptComment());
		assetManageReqImpl.setRetrieveCauseId(getRetrieveCauseId());
		assetManageReqImpl.setConstructId(getConstructId());
		assetManageReqImpl.setDelegator(getDelegator());
		assetManageReqImpl.setIsFull(getIsFull());
		assetManageReqImpl.setTitleDelegator(getTitleDelegator());
		assetManageReqImpl.setMobileNumber(getMobileNumber());
		assetManageReqImpl.setDocument(getDocument());
		assetManageReqImpl.setFailCheckId(getFailCheckId());
		assetManageReqImpl.setDeliveryNoteId(getDeliveryNoteId());
		assetManageReqImpl.setIsMaintain(getIsMaintain());
		assetManageReqImpl.setCauseReject(getCauseReject());
		assetManageReqImpl.setAssetType(getAssetType());
		assetManageReqImpl.setRetrieveType(getRetrieveType());
		assetManageReqImpl.setRetrieveCmdId(getRetrieveCmdId());
		assetManageReqImpl.setPlanSwapId(getPlanSwapId());
		assetManageReqImpl.setCertificateRegistrationId(getCertificateRegistrationId());
		assetManageReqImpl.setContractid(getContractid());
		assetManageReqImpl.setPartnerId(getPartnerId());
		assetManageReqImpl.setStatusCa(getStatusCa());
		assetManageReqImpl.setCommentCa(getCommentCa());
		assetManageReqImpl.setDocumentCaId(getDocumentCaId());

		assetManageReqImpl.resetOriginalValues();

		return assetManageReqImpl;
	}

	@Override
	public int compareTo(AssetManageReq assetManageReq) {
		long primaryKey = assetManageReq.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AssetManageReq)) {
			return false;
		}

		AssetManageReq assetManageReq = (AssetManageReq)obj;

		long primaryKey = assetManageReq.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<AssetManageReq> toCacheModel() {
		AssetManageReqCacheModel assetManageReqCacheModel = new AssetManageReqCacheModel();

		assetManageReqCacheModel.manageReqId = getManageReqId();

		assetManageReqCacheModel.reqGroupId = getReqGroupId();

		assetManageReqCacheModel.userId = getUserId();

		assetManageReqCacheModel.recvGroupId = getRecvGroupId();

		assetManageReqCacheModel.cause = getCause();

		String cause = assetManageReqCacheModel.cause;

		if ((cause != null) && (cause.length() == 0)) {
			assetManageReqCacheModel.cause = null;
		}

		assetManageReqCacheModel.creatorId = getCreatorId();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			assetManageReqCacheModel.createdDate = createdDate.getTime();
		}
		else {
			assetManageReqCacheModel.createdDate = Long.MIN_VALUE;
		}

		assetManageReqCacheModel.status = getStatus();

		assetManageReqCacheModel.type = getType();

		assetManageReqCacheModel.usedGroupId = getUsedGroupId();

		assetManageReqCacheModel.code = getCode();

		String code = assetManageReqCacheModel.code;

		if ((code != null) && (code.length() == 0)) {
			assetManageReqCacheModel.code = null;
		}

		assetManageReqCacheModel.acceptorId = getAcceptorId();

		assetManageReqCacheModel.acceptComment = getAcceptComment();

		String acceptComment = assetManageReqCacheModel.acceptComment;

		if ((acceptComment != null) && (acceptComment.length() == 0)) {
			assetManageReqCacheModel.acceptComment = null;
		}

		assetManageReqCacheModel.retrieveCauseId = getRetrieveCauseId();

		assetManageReqCacheModel.constructId = getConstructId();

		assetManageReqCacheModel.delegator = getDelegator();

		String delegator = assetManageReqCacheModel.delegator;

		if ((delegator != null) && (delegator.length() == 0)) {
			assetManageReqCacheModel.delegator = null;
		}

		assetManageReqCacheModel.isFull = getIsFull();

		assetManageReqCacheModel.titleDelegator = getTitleDelegator();

		String titleDelegator = assetManageReqCacheModel.titleDelegator;

		if ((titleDelegator != null) && (titleDelegator.length() == 0)) {
			assetManageReqCacheModel.titleDelegator = null;
		}

		assetManageReqCacheModel.mobileNumber = getMobileNumber();

		assetManageReqCacheModel.document = getDocument();

		String document = assetManageReqCacheModel.document;

		if ((document != null) && (document.length() == 0)) {
			assetManageReqCacheModel.document = null;
		}

		assetManageReqCacheModel.failCheckId = getFailCheckId();

		assetManageReqCacheModel.deliveryNoteId = getDeliveryNoteId();

		assetManageReqCacheModel.isMaintain = getIsMaintain();

		assetManageReqCacheModel.causeReject = getCauseReject();

		String causeReject = assetManageReqCacheModel.causeReject;

		if ((causeReject != null) && (causeReject.length() == 0)) {
			assetManageReqCacheModel.causeReject = null;
		}

		assetManageReqCacheModel.assetType = getAssetType();

		assetManageReqCacheModel.retrieveType = getRetrieveType();

		assetManageReqCacheModel.retrieveCmdId = getRetrieveCmdId();

		assetManageReqCacheModel.planSwapId = getPlanSwapId();

		assetManageReqCacheModel.certificateRegistrationId = getCertificateRegistrationId();

		assetManageReqCacheModel.contractid = getContractid();

		assetManageReqCacheModel.partnerId = getPartnerId();

		assetManageReqCacheModel.statusCa = getStatusCa();

		assetManageReqCacheModel.commentCa = getCommentCa();

		String commentCa = assetManageReqCacheModel.commentCa;

		if ((commentCa != null) && (commentCa.length() == 0)) {
			assetManageReqCacheModel.commentCa = null;
		}

		assetManageReqCacheModel.documentCaId = getDocumentCaId();

		return assetManageReqCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(69);

		sb.append("{manageReqId=");
		sb.append(getManageReqId());
		sb.append(", reqGroupId=");
		sb.append(getReqGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", recvGroupId=");
		sb.append(getRecvGroupId());
		sb.append(", cause=");
		sb.append(getCause());
		sb.append(", creatorId=");
		sb.append(getCreatorId());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", usedGroupId=");
		sb.append(getUsedGroupId());
		sb.append(", code=");
		sb.append(getCode());
		sb.append(", acceptorId=");
		sb.append(getAcceptorId());
		sb.append(", acceptComment=");
		sb.append(getAcceptComment());
		sb.append(", retrieveCauseId=");
		sb.append(getRetrieveCauseId());
		sb.append(", constructId=");
		sb.append(getConstructId());
		sb.append(", delegator=");
		sb.append(getDelegator());
		sb.append(", isFull=");
		sb.append(getIsFull());
		sb.append(", titleDelegator=");
		sb.append(getTitleDelegator());
		sb.append(", mobileNumber=");
		sb.append(getMobileNumber());
		sb.append(", document=");
		sb.append(getDocument());
		sb.append(", failCheckId=");
		sb.append(getFailCheckId());
		sb.append(", deliveryNoteId=");
		sb.append(getDeliveryNoteId());
		sb.append(", isMaintain=");
		sb.append(getIsMaintain());
		sb.append(", causeReject=");
		sb.append(getCauseReject());
		sb.append(", assetType=");
		sb.append(getAssetType());
		sb.append(", retrieveType=");
		sb.append(getRetrieveType());
		sb.append(", retrieveCmdId=");
		sb.append(getRetrieveCmdId());
		sb.append(", planSwapId=");
		sb.append(getPlanSwapId());
		sb.append(", certificateRegistrationId=");
		sb.append(getCertificateRegistrationId());
		sb.append(", contractid=");
		sb.append(getContractid());
		sb.append(", partnerId=");
		sb.append(getPartnerId());
		sb.append(", statusCa=");
		sb.append(getStatusCa());
		sb.append(", commentCa=");
		sb.append(getCommentCa());
		sb.append(", documentCaId=");
		sb.append(getDocumentCaId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(106);

		sb.append("<model><model-name>");
		sb.append("com.viettel.ams.core.model.AssetManageReq");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>manageReqId</column-name><column-value><![CDATA[");
		sb.append(getManageReqId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reqGroupId</column-name><column-value><![CDATA[");
		sb.append(getReqGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recvGroupId</column-name><column-value><![CDATA[");
		sb.append(getRecvGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cause</column-name><column-value><![CDATA[");
		sb.append(getCause());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorId</column-name><column-value><![CDATA[");
		sb.append(getCreatorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usedGroupId</column-name><column-value><![CDATA[");
		sb.append(getUsedGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>code</column-name><column-value><![CDATA[");
		sb.append(getCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>acceptorId</column-name><column-value><![CDATA[");
		sb.append(getAcceptorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>acceptComment</column-name><column-value><![CDATA[");
		sb.append(getAcceptComment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>retrieveCauseId</column-name><column-value><![CDATA[");
		sb.append(getRetrieveCauseId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>constructId</column-name><column-value><![CDATA[");
		sb.append(getConstructId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>delegator</column-name><column-value><![CDATA[");
		sb.append(getDelegator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isFull</column-name><column-value><![CDATA[");
		sb.append(getIsFull());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>titleDelegator</column-name><column-value><![CDATA[");
		sb.append(getTitleDelegator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mobileNumber</column-name><column-value><![CDATA[");
		sb.append(getMobileNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>document</column-name><column-value><![CDATA[");
		sb.append(getDocument());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>failCheckId</column-name><column-value><![CDATA[");
		sb.append(getFailCheckId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deliveryNoteId</column-name><column-value><![CDATA[");
		sb.append(getDeliveryNoteId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isMaintain</column-name><column-value><![CDATA[");
		sb.append(getIsMaintain());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>causeReject</column-name><column-value><![CDATA[");
		sb.append(getCauseReject());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assetType</column-name><column-value><![CDATA[");
		sb.append(getAssetType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>retrieveType</column-name><column-value><![CDATA[");
		sb.append(getRetrieveType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>retrieveCmdId</column-name><column-value><![CDATA[");
		sb.append(getRetrieveCmdId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>planSwapId</column-name><column-value><![CDATA[");
		sb.append(getPlanSwapId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certificateRegistrationId</column-name><column-value><![CDATA[");
		sb.append(getCertificateRegistrationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractid</column-name><column-value><![CDATA[");
		sb.append(getContractid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>partnerId</column-name><column-value><![CDATA[");
		sb.append(getPartnerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusCa</column-name><column-value><![CDATA[");
		sb.append(getStatusCa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>commentCa</column-name><column-value><![CDATA[");
		sb.append(getCommentCa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentCaId</column-name><column-value><![CDATA[");
		sb.append(getDocumentCaId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AssetManageReq.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			AssetManageReq.class
		};
	private long _manageReqId;
	private Long _reqGroupId;
	private Long _userId;
	private Long _recvGroupId;
	private String _cause;
	private Long _creatorId;
	private Date _createdDate;
	private Long _status;
	private Long _type;
	private Long _usedGroupId;
	private String _code;
	private Long _acceptorId;
	private String _acceptComment;
	private Long _retrieveCauseId;
	private Long _constructId;
	private String _delegator;
	private Long _isFull;
	private String _titleDelegator;
	private Long _mobileNumber;
	private String _document;
	private Long _failCheckId;
	private Long _deliveryNoteId;
	private Long _isMaintain;
	private String _causeReject;
	private Long _assetType;
	private Long _retrieveType;
	private Long _retrieveCmdId;
	private Long _planSwapId;
	private Long _certificateRegistrationId;
	private Long _contractid;
	private Long _partnerId;
	private Long _statusCa;
	private String _commentCa;
	private Long _documentCaId;
	private AssetManageReq _escapedModel;
}