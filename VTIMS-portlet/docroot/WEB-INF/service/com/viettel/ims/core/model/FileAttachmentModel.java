/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.viettel.ims.core.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the FileAttachment service. Represents a row in the &quot;FileAttachment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.viettel.ims.core.model.impl.FileAttachmentModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.viettel.ims.core.model.impl.FileAttachmentImpl}.
 * </p>
 *
 * @author MrNet
 * @see FileAttachment
 * @see com.viettel.ims.core.model.impl.FileAttachmentImpl
 * @see com.viettel.ims.core.model.impl.FileAttachmentModelImpl
 * @generated
 */
public interface FileAttachmentModel extends BaseModel<FileAttachment> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a file attachment model instance should use the {@link FileAttachment} interface instead.
	 */

	/**
	 * Returns the primary key of this file attachment.
	 *
	 * @return the primary key of this file attachment
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this file attachment.
	 *
	 * @param primaryKey the primary key of this file attachment
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the file attachment ID of this file attachment.
	 *
	 * @return the file attachment ID of this file attachment
	 */
	public long getFileAttachmentId();

	/**
	 * Sets the file attachment ID of this file attachment.
	 *
	 * @param fileAttachmentId the file attachment ID of this file attachment
	 */
	public void setFileAttachmentId(long fileAttachmentId);

	/**
	 * Returns the company ID of this file attachment.
	 *
	 * @return the company ID of this file attachment
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this file attachment.
	 *
	 * @param companyId the company ID of this file attachment
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the repository ID of this file attachment.
	 *
	 * @return the repository ID of this file attachment
	 */
	public long getRepositoryId();

	/**
	 * Sets the repository ID of this file attachment.
	 *
	 * @param repositoryId the repository ID of this file attachment
	 */
	public void setRepositoryId(long repositoryId);

	/**
	 * Returns the folder ID of this file attachment.
	 *
	 * @return the folder ID of this file attachment
	 */
	public long getFolderId();

	/**
	 * Sets the folder ID of this file attachment.
	 *
	 * @param folderId the folder ID of this file attachment
	 */
	public void setFolderId(long folderId);

	/**
	 * Returns the created date of this file attachment.
	 *
	 * @return the created date of this file attachment
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this file attachment.
	 *
	 * @param createdDate the created date of this file attachment
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the created by ID of this file attachment.
	 *
	 * @return the created by ID of this file attachment
	 */
	public long getCreatedById();

	/**
	 * Sets the created by ID of this file attachment.
	 *
	 * @param createdById the created by ID of this file attachment
	 */
	public void setCreatedById(long createdById);

	/**
	 * Returns the tree path_ of this file attachment.
	 *
	 * @return the tree path_ of this file attachment
	 */
	@AutoEscape
	public String getTreePath_();

	/**
	 * Sets the tree path_ of this file attachment.
	 *
	 * @param treePath_ the tree path_ of this file attachment
	 */
	public void setTreePath_(String treePath_);

	/**
	 * Returns the name of this file attachment.
	 *
	 * @return the name of this file attachment
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this file attachment.
	 *
	 * @param name the name of this file attachment
	 */
	public void setName(String name);

	/**
	 * Returns the extention of this file attachment.
	 *
	 * @return the extention of this file attachment
	 */
	@AutoEscape
	public String getExtention();

	/**
	 * Sets the extention of this file attachment.
	 *
	 * @param extention the extention of this file attachment
	 */
	public void setExtention(String extention);

	/**
	 * Returns the mime type of this file attachment.
	 *
	 * @return the mime type of this file attachment
	 */
	@AutoEscape
	public String getMimeType();

	/**
	 * Sets the mime type of this file attachment.
	 *
	 * @param mimeType the mime type of this file attachment
	 */
	public void setMimeType(String mimeType);

	/**
	 * Returns the title of this file attachment.
	 *
	 * @return the title of this file attachment
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this file attachment.
	 *
	 * @param title the title of this file attachment
	 */
	public void setTitle(String title);

	/**
	 * Returns the description of this file attachment.
	 *
	 * @return the description of this file attachment
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this file attachment.
	 *
	 * @param description the description of this file attachment
	 */
	public void setDescription(String description);

	/**
	 * Returns the extra setting of this file attachment.
	 *
	 * @return the extra setting of this file attachment
	 */
	@AutoEscape
	public String getExtraSetting();

	/**
	 * Sets the extra setting of this file attachment.
	 *
	 * @param extraSetting the extra setting of this file attachment
	 */
	public void setExtraSetting(String extraSetting);

	/**
	 * Returns the file type ID of this file attachment.
	 *
	 * @return the file type ID of this file attachment
	 */
	public long getFileTypeId();

	/**
	 * Sets the file type ID of this file attachment.
	 *
	 * @param fileTypeId the file type ID of this file attachment
	 */
	public void setFileTypeId(long fileTypeId);

	/**
	 * Returns the version of this file attachment.
	 *
	 * @return the version of this file attachment
	 */
	@AutoEscape
	public String getVersion();

	/**
	 * Sets the version of this file attachment.
	 *
	 * @param version the version of this file attachment
	 */
	public void setVersion(String version);

	/**
	 * Returns the size_ of this file attachment.
	 *
	 * @return the size_ of this file attachment
	 */
	public long getSize_();

	/**
	 * Sets the size_ of this file attachment.
	 *
	 * @param size_ the size_ of this file attachment
	 */
	public void setSize_(long size_);

	/**
	 * Returns the read count of this file attachment.
	 *
	 * @return the read count of this file attachment
	 */
	public int getReadCount();

	/**
	 * Sets the read count of this file attachment.
	 *
	 * @param readCount the read count of this file attachment
	 */
	public void setReadCount(int readCount);

	/**
	 * Returns the small image ID of this file attachment.
	 *
	 * @return the small image ID of this file attachment
	 */
	public long getSmallImageId();

	/**
	 * Sets the small image ID of this file attachment.
	 *
	 * @param smallImageId the small image ID of this file attachment
	 */
	public void setSmallImageId(long smallImageId);

	/**
	 * Returns the large image ID of this file attachment.
	 *
	 * @return the large image ID of this file attachment
	 */
	public long getLargeImageId();

	/**
	 * Sets the large image ID of this file attachment.
	 *
	 * @param largeImageId the large image ID of this file attachment
	 */
	public void setLargeImageId(long largeImageId);

	/**
	 * Returns the custom1 image of this file attachment.
	 *
	 * @return the custom1 image of this file attachment
	 */
	public long getCustom1Image();

	/**
	 * Sets the custom1 image of this file attachment.
	 *
	 * @param custom1Image the custom1 image of this file attachment
	 */
	public void setCustom1Image(long custom1Image);

	/**
	 * Returns the custom2 image of this file attachment.
	 *
	 * @return the custom2 image of this file attachment
	 */
	public long getCustom2Image();

	/**
	 * Sets the custom2 image of this file attachment.
	 *
	 * @param custom2Image the custom2 image of this file attachment
	 */
	public void setCustom2Image(long custom2Image);

	/**
	 * Returns the is manual check in required of this file attachment.
	 *
	 * @return the is manual check in required of this file attachment
	 */
	public boolean getIsManualCheckInRequired();

	/**
	 * Returns <code>true</code> if this file attachment is is manual check in required.
	 *
	 * @return <code>true</code> if this file attachment is is manual check in required; <code>false</code> otherwise
	 */
	public boolean isIsManualCheckInRequired();

	/**
	 * Sets whether this file attachment is is manual check in required.
	 *
	 * @param isManualCheckInRequired the is manual check in required of this file attachment
	 */
	public void setIsManualCheckInRequired(boolean isManualCheckInRequired);

	/**
	 * Returns the object type of this file attachment.
	 *
	 * @return the object type of this file attachment
	 */
	public int getObjectType();

	/**
	 * Sets the object type of this file attachment.
	 *
	 * @param objectType the object type of this file attachment
	 */
	public void setObjectType(int objectType);

	/**
	 * Returns the object ID of this file attachment.
	 *
	 * @return the object ID of this file attachment
	 */
	public long getObjectId();

	/**
	 * Sets the object ID of this file attachment.
	 *
	 * @param objectId the object ID of this file attachment
	 */
	public void setObjectId(long objectId);

	/**
	 * Returns the modified by ID of this file attachment.
	 *
	 * @return the modified by ID of this file attachment
	 */
	public long getModifiedById();

	/**
	 * Sets the modified by ID of this file attachment.
	 *
	 * @param modifiedById the modified by ID of this file attachment
	 */
	public void setModifiedById(long modifiedById);

	/**
	 * Returns the modified date of this file attachment.
	 *
	 * @return the modified date of this file attachment
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this file attachment.
	 *
	 * @param modifiedDate the modified date of this file attachment
	 */
	public void setModifiedDate(Date modifiedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.viettel.ims.core.model.FileAttachment fileAttachment);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.viettel.ims.core.model.FileAttachment> toCacheModel();

	@Override
	public com.viettel.ims.core.model.FileAttachment toEscapedModel();

	@Override
	public com.viettel.ims.core.model.FileAttachment toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}