/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vnpt.portlet.user.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import com.vnpt.portlet.user.model.ActIdMembership;
import com.vnpt.portlet.user.model.ActIdMembershipModel;
import com.vnpt.portlet.user.service.persistence.ActIdMembershipPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ActIdMembership service. Represents a row in the &quot;act_id_membership&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.vnpt.portlet.user.model.ActIdMembershipModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ActIdMembershipImpl}.
 * </p>
 *
 * @author ToanNQ86
 * @see ActIdMembershipImpl
 * @see com.vnpt.portlet.user.model.ActIdMembership
 * @see com.vnpt.portlet.user.model.ActIdMembershipModel
 * @generated
 */
public class ActIdMembershipModelImpl extends BaseModelImpl<ActIdMembership>
	implements ActIdMembershipModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a act ID membership model instance should use the {@link com.vnpt.portlet.user.model.ActIdMembership} interface instead.
	 */
	public static final String TABLE_NAME = "act_id_membership";
	public static final Object[][] TABLE_COLUMNS = {
			{ "user_id_", Types.BIGINT },
			{ "group_id_", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table act_id_membership (user_id_ LONG not null,group_id_ LONG not null,primary key (user_id_, group_id_))";
	public static final String TABLE_SQL_DROP = "drop table act_id_membership";
	public static final String ORDER_BY_JPQL = " ORDER BY actIdMembership.id.userId ASC, actIdMembership.id.groupId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY act_id_membership.user_id_ ASC, act_id_membership.group_id_ ASC";
	public static final String DATA_SOURCE = "activityDataSource";
	public static final String SESSION_FACTORY = "activitySessionFactory";
	public static final String TX_MANAGER = "activityTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.vnpt.portlet.user.model.ActIdMembership"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.vnpt.portlet.user.model.ActIdMembership"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.vnpt.portlet.user.model.ActIdMembership"));

	public ActIdMembershipModelImpl() {
	}

	@Override
	public ActIdMembershipPK getPrimaryKey() {
		return new ActIdMembershipPK(_userId, _groupId);
	}

	@Override
	public void setPrimaryKey(ActIdMembershipPK primaryKey) {
		setUserId(primaryKey.userId);
		setGroupId(primaryKey.groupId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ActIdMembershipPK(_userId, _groupId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ActIdMembershipPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ActIdMembership.class;
	}

	@Override
	public String getModelClassName() {
		return ActIdMembership.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public ActIdMembership toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ActIdMembership)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ActIdMembershipImpl actIdMembershipImpl = new ActIdMembershipImpl();

		actIdMembershipImpl.setUserId(getUserId());
		actIdMembershipImpl.setGroupId(getGroupId());

		actIdMembershipImpl.resetOriginalValues();

		return actIdMembershipImpl;
	}

	@Override
	public int compareTo(ActIdMembership actIdMembership) {
		ActIdMembershipPK primaryKey = actIdMembership.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ActIdMembership)) {
			return false;
		}

		ActIdMembership actIdMembership = (ActIdMembership)obj;

		ActIdMembershipPK primaryKey = actIdMembership.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ActIdMembership> toCacheModel() {
		ActIdMembershipCacheModel actIdMembershipCacheModel = new ActIdMembershipCacheModel();

		actIdMembershipCacheModel.userId = getUserId();

		actIdMembershipCacheModel.groupId = getGroupId();

		return actIdMembershipCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("com.vnpt.portlet.user.model.ActIdMembership");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ActIdMembership.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ActIdMembership.class
		};
	private long _userId;
	private String _userUuid;
	private long _groupId;
	private ActIdMembership _escapedModel;
}