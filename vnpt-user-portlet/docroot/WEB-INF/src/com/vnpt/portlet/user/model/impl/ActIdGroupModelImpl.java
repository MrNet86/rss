/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vnpt.portlet.user.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.vnpt.portlet.user.model.ActIdGroup;
import com.vnpt.portlet.user.model.ActIdGroupModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ActIdGroup service. Represents a row in the &quot;act_id_group&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.vnpt.portlet.user.model.ActIdGroupModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ActIdGroupImpl}.
 * </p>
 *
 * @author ToanNQ86
 * @see ActIdGroupImpl
 * @see com.vnpt.portlet.user.model.ActIdGroup
 * @see com.vnpt.portlet.user.model.ActIdGroupModel
 * @generated
 */
public class ActIdGroupModelImpl extends BaseModelImpl<ActIdGroup>
	implements ActIdGroupModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a act ID group model instance should use the {@link com.vnpt.portlet.user.model.ActIdGroup} interface instead.
	 */
	public static final String TABLE_NAME = "act_id_group";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.VARCHAR },
			{ "rev_", Types.BIGINT },
			{ "name_", Types.VARCHAR },
			{ "type_", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table act_id_group (id_ VARCHAR(75) not null primary key,rev_ LONG,name_ VARCHAR(75) null,type_ VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table act_id_group";
	public static final String ORDER_BY_JPQL = " ORDER BY actIdGroup.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY act_id_group.id_ ASC";
	public static final String DATA_SOURCE = "activityDataSource";
	public static final String SESSION_FACTORY = "activitySessionFactory";
	public static final String TX_MANAGER = "activityTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.vnpt.portlet.user.model.ActIdGroup"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.vnpt.portlet.user.model.ActIdGroup"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.vnpt.portlet.user.model.ActIdGroup"));

	public ActIdGroupModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ActIdGroup.class;
	}

	@Override
	public String getModelClassName() {
		return ActIdGroup.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("rev", getRev());
		attributes.put("name", getName());
		attributes.put("type", getType());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String id = (String)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long rev = (Long)attributes.get("rev");

		if (rev != null) {
			setRev(rev);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}
	}

	@Override
	public String getId() {
		if (_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _id;
		}
	}

	@Override
	public void setId(String id) {
		_id = id;
	}

	@Override
	public long getRev() {
		return _rev;
	}

	@Override
	public void setRev(long rev) {
		_rev = rev;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		_type = type;
	}

	@Override
	public ActIdGroup toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ActIdGroup)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ActIdGroupImpl actIdGroupImpl = new ActIdGroupImpl();

		actIdGroupImpl.setId(getId());
		actIdGroupImpl.setRev(getRev());
		actIdGroupImpl.setName(getName());
		actIdGroupImpl.setType(getType());

		actIdGroupImpl.resetOriginalValues();

		return actIdGroupImpl;
	}

	@Override
	public int compareTo(ActIdGroup actIdGroup) {
		String primaryKey = actIdGroup.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ActIdGroup)) {
			return false;
		}

		ActIdGroup actIdGroup = (ActIdGroup)obj;

		String primaryKey = actIdGroup.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ActIdGroup> toCacheModel() {
		ActIdGroupCacheModel actIdGroupCacheModel = new ActIdGroupCacheModel();

		actIdGroupCacheModel.id = getId();

		String id = actIdGroupCacheModel.id;

		if ((id != null) && (id.length() == 0)) {
			actIdGroupCacheModel.id = null;
		}

		actIdGroupCacheModel.rev = getRev();

		actIdGroupCacheModel.name = getName();

		String name = actIdGroupCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			actIdGroupCacheModel.name = null;
		}

		actIdGroupCacheModel.type = getType();

		String type = actIdGroupCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			actIdGroupCacheModel.type = null;
		}

		return actIdGroupCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", rev=");
		sb.append(getRev());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", type=");
		sb.append(getType());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.vnpt.portlet.user.model.ActIdGroup");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rev</column-name><column-value><![CDATA[");
		sb.append(getRev());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ActIdGroup.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ActIdGroup.class
		};
	private String _id;
	private long _rev;
	private String _name;
	private String _type;
	private ActIdGroup _escapedModel;
}