/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vnpt.portlet.user.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.vnpt.portlet.user.model.ActIdUser;
import com.vnpt.portlet.user.model.ActIdUserModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ActIdUser service. Represents a row in the &quot;act_id_user&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.vnpt.portlet.user.model.ActIdUserModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ActIdUserImpl}.
 * </p>
 *
 * @author ToanNQ86
 * @see ActIdUserImpl
 * @see com.vnpt.portlet.user.model.ActIdUser
 * @see com.vnpt.portlet.user.model.ActIdUserModel
 * @generated
 */
public class ActIdUserModelImpl extends BaseModelImpl<ActIdUser>
	implements ActIdUserModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a act ID user model instance should use the {@link com.vnpt.portlet.user.model.ActIdUser} interface instead.
	 */
	public static final String TABLE_NAME = "act_id_user";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.VARCHAR },
			{ "rev_", Types.BIGINT },
			{ "first_", Types.VARCHAR },
			{ "last_", Types.VARCHAR },
			{ "email_", Types.VARCHAR },
			{ "pwd_", Types.VARCHAR },
			{ "picture_id_", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table act_id_user (id_ VARCHAR(75) not null primary key,rev_ LONG,first_ VARCHAR(75) null,last_ VARCHAR(75) null,email_ VARCHAR(75) null,pwd_ VARCHAR(75) null,picture_id_ VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table act_id_user";
	public static final String ORDER_BY_JPQL = " ORDER BY actIdUser.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY act_id_user.id_ ASC";
	public static final String DATA_SOURCE = "activityDataSource";
	public static final String SESSION_FACTORY = "activitySessionFactory";
	public static final String TX_MANAGER = "activityTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.vnpt.portlet.user.model.ActIdUser"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.vnpt.portlet.user.model.ActIdUser"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.vnpt.portlet.user.model.ActIdUser"));

	public ActIdUserModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ActIdUser.class;
	}

	@Override
	public String getModelClassName() {
		return ActIdUser.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("rev", getRev());
		attributes.put("first", getFirst());
		attributes.put("last", getLast());
		attributes.put("email", getEmail());
		attributes.put("pwd", getPwd());
		attributes.put("pictureId", getPictureId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String id = (String)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long rev = (Long)attributes.get("rev");

		if (rev != null) {
			setRev(rev);
		}

		String first = (String)attributes.get("first");

		if (first != null) {
			setFirst(first);
		}

		String last = (String)attributes.get("last");

		if (last != null) {
			setLast(last);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String pwd = (String)attributes.get("pwd");

		if (pwd != null) {
			setPwd(pwd);
		}

		String pictureId = (String)attributes.get("pictureId");

		if (pictureId != null) {
			setPictureId(pictureId);
		}
	}

	@Override
	public String getId() {
		if (_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _id;
		}
	}

	@Override
	public void setId(String id) {
		_id = id;
	}

	@Override
	public long getRev() {
		return _rev;
	}

	@Override
	public void setRev(long rev) {
		_rev = rev;
	}

	@Override
	public String getFirst() {
		if (_first == null) {
			return StringPool.BLANK;
		}
		else {
			return _first;
		}
	}

	@Override
	public void setFirst(String first) {
		_first = first;
	}

	@Override
	public String getLast() {
		if (_last == null) {
			return StringPool.BLANK;
		}
		else {
			return _last;
		}
	}

	@Override
	public void setLast(String last) {
		_last = last;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@Override
	public String getPwd() {
		if (_pwd == null) {
			return StringPool.BLANK;
		}
		else {
			return _pwd;
		}
	}

	@Override
	public void setPwd(String pwd) {
		_pwd = pwd;
	}

	@Override
	public String getPictureId() {
		if (_pictureId == null) {
			return StringPool.BLANK;
		}
		else {
			return _pictureId;
		}
	}

	@Override
	public void setPictureId(String pictureId) {
		_pictureId = pictureId;
	}

	@Override
	public ActIdUser toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ActIdUser)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ActIdUserImpl actIdUserImpl = new ActIdUserImpl();

		actIdUserImpl.setId(getId());
		actIdUserImpl.setRev(getRev());
		actIdUserImpl.setFirst(getFirst());
		actIdUserImpl.setLast(getLast());
		actIdUserImpl.setEmail(getEmail());
		actIdUserImpl.setPwd(getPwd());
		actIdUserImpl.setPictureId(getPictureId());

		actIdUserImpl.resetOriginalValues();

		return actIdUserImpl;
	}

	@Override
	public int compareTo(ActIdUser actIdUser) {
		String primaryKey = actIdUser.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ActIdUser)) {
			return false;
		}

		ActIdUser actIdUser = (ActIdUser)obj;

		String primaryKey = actIdUser.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ActIdUser> toCacheModel() {
		ActIdUserCacheModel actIdUserCacheModel = new ActIdUserCacheModel();

		actIdUserCacheModel.id = getId();

		String id = actIdUserCacheModel.id;

		if ((id != null) && (id.length() == 0)) {
			actIdUserCacheModel.id = null;
		}

		actIdUserCacheModel.rev = getRev();

		actIdUserCacheModel.first = getFirst();

		String first = actIdUserCacheModel.first;

		if ((first != null) && (first.length() == 0)) {
			actIdUserCacheModel.first = null;
		}

		actIdUserCacheModel.last = getLast();

		String last = actIdUserCacheModel.last;

		if ((last != null) && (last.length() == 0)) {
			actIdUserCacheModel.last = null;
		}

		actIdUserCacheModel.email = getEmail();

		String email = actIdUserCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			actIdUserCacheModel.email = null;
		}

		actIdUserCacheModel.pwd = getPwd();

		String pwd = actIdUserCacheModel.pwd;

		if ((pwd != null) && (pwd.length() == 0)) {
			actIdUserCacheModel.pwd = null;
		}

		actIdUserCacheModel.pictureId = getPictureId();

		String pictureId = actIdUserCacheModel.pictureId;

		if ((pictureId != null) && (pictureId.length() == 0)) {
			actIdUserCacheModel.pictureId = null;
		}

		return actIdUserCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", rev=");
		sb.append(getRev());
		sb.append(", first=");
		sb.append(getFirst());
		sb.append(", last=");
		sb.append(getLast());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", pwd=");
		sb.append(getPwd());
		sb.append(", pictureId=");
		sb.append(getPictureId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.vnpt.portlet.user.model.ActIdUser");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rev</column-name><column-value><![CDATA[");
		sb.append(getRev());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>first</column-name><column-value><![CDATA[");
		sb.append(getFirst());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>last</column-name><column-value><![CDATA[");
		sb.append(getLast());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pwd</column-name><column-value><![CDATA[");
		sb.append(getPwd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pictureId</column-name><column-value><![CDATA[");
		sb.append(getPictureId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ActIdUser.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ActIdUser.class
		};
	private String _id;
	private long _rev;
	private String _first;
	private String _last;
	private String _email;
	private String _pwd;
	private String _pictureId;
	private ActIdUser _escapedModel;
}