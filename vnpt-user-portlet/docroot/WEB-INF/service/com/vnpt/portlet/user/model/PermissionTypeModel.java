/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.vnpt.portlet.user.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the PermissionType service. Represents a row in the &quot;eportal_permission_type&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.vnpt.portlet.user.model.impl.PermissionTypeModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.vnpt.portlet.user.model.impl.PermissionTypeImpl}.
 * </p>
 *
 * @author ToanNQ86
 * @see PermissionType
 * @see com.vnpt.portlet.user.model.impl.PermissionTypeImpl
 * @see com.vnpt.portlet.user.model.impl.PermissionTypeModelImpl
 * @generated
 */
public interface PermissionTypeModel extends BaseModel<PermissionType> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a permission type model instance should use the {@link PermissionType} interface instead.
	 */

	/**
	 * Returns the primary key of this permission type.
	 *
	 * @return the primary key of this permission type
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this permission type.
	 *
	 * @param primaryKey the primary key of this permission type
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the permission type ID of this permission type.
	 *
	 * @return the permission type ID of this permission type
	 */
	public long getPermissionTypeId();

	/**
	 * Sets the permission type ID of this permission type.
	 *
	 * @param permissionTypeId the permission type ID of this permission type
	 */
	public void setPermissionTypeId(long permissionTypeId);

	/**
	 * Returns the group ID of this permission type.
	 *
	 * @return the group ID of this permission type
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this permission type.
	 *
	 * @param groupId the group ID of this permission type
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this permission type.
	 *
	 * @return the company ID of this permission type
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this permission type.
	 *
	 * @param companyId the company ID of this permission type
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the type name of this permission type.
	 *
	 * @return the type name of this permission type
	 */
	@AutoEscape
	public String getTypeName();

	/**
	 * Sets the type name of this permission type.
	 *
	 * @param typeName the type name of this permission type
	 */
	public void setTypeName(String typeName);

	/**
	 * Returns the type code of this permission type.
	 *
	 * @return the type code of this permission type
	 */
	@AutoEscape
	public String getTypeCode();

	/**
	 * Sets the type code of this permission type.
	 *
	 * @param typeCode the type code of this permission type
	 */
	public void setTypeCode(String typeCode);

	/**
	 * Returns the is active of this permission type.
	 *
	 * @return the is active of this permission type
	 */
	public int getIsActive();

	/**
	 * Sets the is active of this permission type.
	 *
	 * @param isActive the is active of this permission type
	 */
	public void setIsActive(int isActive);

	/**
	 * Returns the description of this permission type.
	 *
	 * @return the description of this permission type
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this permission type.
	 *
	 * @param description the description of this permission type
	 */
	public void setDescription(String description);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.vnpt.portlet.user.model.PermissionType permissionType);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.vnpt.portlet.user.model.PermissionType> toCacheModel();

	@Override
	public com.vnpt.portlet.user.model.PermissionType toEscapedModel();

	@Override
	public com.vnpt.portlet.user.model.PermissionType toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}